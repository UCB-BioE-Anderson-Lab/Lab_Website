{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Anderson Labat UC Berkeley <p>Engineering biology through computational modeling and experimental design</p> About the Lab <p>       Our research focuses on building tools that help us reason about and control biology. We develop software to support genetic design and biochemical modeling, engineer therapeutic microbes as long-term goals, and prototype new approaches to DNA fabrication and biocontainment. The common thread is turning biological systems into things we can test, predict, and trust.     </p> <p>     A lot of our work starts with a simple but difficult question: how do we know whether a genetic design or experimental plan will actually work? In synthetic biology, you're often stitching together pieces from different systems. You're introducing foreign genes and making new molecules. It\u2019s easy to draw a pathway on paper, but much harder to know how that design will behave once it hits a living system.   </p> <p>     This question has followed us through a range of projects. Early on, as part of the PI's graduate research, work was done on incorporating unnatural amino acids into proteins. That work was successful, but it also highlighted how unpredictable cell metabolism can be. For example, we saw alpha-hydroxy acids getting consumed in unexpected ways. Later, efforts to program bacteria for therapeutic delivery exposed a different kind of complexity: too many variables, and a lack of tools for reasoning through them. That experience shifted our focus. If we want to do ambitious things with biology, we need to understand where designs break, and why.   </p> <p>     Our current research is building that kind of understanding. We\u2019re developing software that can simulate DNA assembly plans, check for errors, and predict outcomes. We\u2019re modeling enzyme reactions in ways that preserve chemical logic, so we can spot off-pathway products or mechanistic mismatches. And we\u2019re working toward systems that make experimental knowledge accessible to automation. Not just as data, but as something a computer can use to reason and decide. The long-term goal is to build a more fluent interface between ideas and experiments.   </p> Recent Highlights <p>Our recent work has focused on creating software tools that support synthetic biology by improving how we model and reason about biological systems:</p> <ul> <li>EVODEX is a system for representing enzymatic reactions in a way that captures chemical logic and allows for prediction and analysis.</li> <li>The Construction File Simulator (CFS) models DNA assembly protocols and helps identify potential design errors before they reach the lab.</li> <li>CHERMIT is a tool for mining and organizing chemical literature to make biochemical knowledge more accessible to automated systems.</li> <li>Our work has also led to technologies commercialized through Synvivia, 20n, and Ambrx.</li> </ul> Opportunities <p>         We welcome curious and motivated researchers at every level, including undergraduates, MEng students, PhD students, postdocs, and visiting scholars.         Learn more in our Teaching and Research sections.       </p> Get in Touch <p>         Interested in working with us? Contact Prof. Anderson at <code>JCAnderson at berkeley dot edu</code>.       </p>"},{"location":"publications/","title":"Publications","text":"<p>The Anderson Lab develops tools and strategies to make biology more engineerable, combining computational modeling with synthetic biology wetlab research. This list of publications reflects work on enzyme specificity prediction, biological design validation, and optimization strategies. It also includes foundational contributions by the PI to unnatural amino acid incorporation during graduate work, as well as lab-driven advances in biosafety systems and standards in biological design automation.</p>"},{"location":"publications/#papers","title":"Papers","text":""},{"location":"publications/#patents","title":"Patents","text":""},{"location":"teaching/","title":"Teaching","text":"<p>The Anderson Lab plays a central role in teaching synthetic biology at UC Berkeley, with course offerings that integrate wetlab skills, computational tools, and real-world project experience. The following are core instructional efforts led by Prof. J. Christopher Anderson:</p>"},{"location":"teaching/#online-cloning-tutorials","title":"Online Cloning Tutorials","text":"<p>To support teaching in synthetic biology, the Anderson Lab offers a structured set of interactive tutorials for BioE 140L students, iGEM members, and others interested in molecular biology. This guided resource features explanatory text, embedded videos, and scored quizzes. It is designed to support diverse entry points and build a strong foundation in core technologies.</p> <p>The tutorials cover:</p> <ul> <li>Designing primers and oligos</li> <li>Planning and running wetlab experiments</li> <li>DNA construction and plasmid visualization</li> <li>In-depth technical overviews of modern synthetic biology methods</li> </ul> <p>Visit: Cloning Tutorials</p>"},{"location":"teaching/#bioe-140l-synthetic-biology-laboratory","title":"BioE 140L: Synthetic Biology Laboratory","text":"<p>Semester: Fall Units: 4 Format: 2 hours lecture + 6 hours lab per week Prerequisites: BioE11 or Bio1A  </p> <p>About the Course BioE 140L is a project-based lab course that introduces students to the tools and mindset of synthetic biology. You'll learn how to design and run cloning experiments, select assays, and interpret experimental results. The course centers on real research projects, giving you a close-up view of how synthetic biology is practiced in the lab, even if you\u2019ve never pipetted before.</p> <p>Why Take It? This course is for students who want a deeper, more applied experience with molecular biology. It\u2019s designed to get you thinking like an experimentalist: how to design, troubleshoot, and iterate on experiments in a real research context.</p> <p>What You\u2019ll Take Away:</p> <ul> <li>Practical skills in cloning, assay planning, and wetlab workflows  </li> <li>Confidence designing experiments from scratch  </li> <li>First-hand insight into how synthetic biology research is structured and executed  </li> <li>A foundation for working in research labs or pursuing more advanced biotech coursework  </li> </ul>"},{"location":"teaching/#bioe-134-undergrad-234-grad-biodesign-automation","title":"BioE 134 (Undergrad) / 234 (Grad): Biodesign Automation","text":"<p>Semester: Spring Units: 4 Format: 3 hours lecture + 1 hour discussion per week Prerequisites: CS 61A or E7, and BioE11 or Bio1A  </p> <p>About the Course Biodesign Automation is a hands-on coding course focused on applying computer science to real problems in synthetic biology. Students build original Python-based tools, rather than relying on existing platforms, to automate tasks like cloning, gene design, and biosynthetic pathway construction. The course helps students connect their biology and chemistry background with programming skills, using platforms like Google Colab and GitHub. Students are introduced to language models such as ChatGPT to assist with coding and explore both the current landscape of biodesign software and the areas where new tools are still needed.</p> <p>Why Take It? This course is for students who want to gain real programming experience while working on meaningful biology problems. It emphasizes integration: combining biological insight with computational thinking, and building tools that reflect the needs and workflows of experimental biologists. Through a mix of structured assignments and a culminating team project, students learn how to turn scientific ideas into functioning software.</p> <p>What You\u2019ll Take Away:</p> <ul> <li>Practical coding skills applied to synthetic biology  </li> <li>Experience designing and automating genetic engineering workflows  </li> <li>Use of large language models like ChatGPT for coding and design  </li> <li>Awareness of current tools and open challenges in biodesign automation  </li> <li>A final project developing software tools that integrate biology and computation  </li> </ul>"},{"location":"teaching/#undergraduate-igem-program","title":"Undergraduate iGEM Program","text":"<p>Learn more \u2192 igem.studentorg.berkeley.edu/about</p> <p>UC Berkeley\u2019s iGEM team is the campus\u2019s primary community for hands-on genetic engineering research by undergraduates. Supported by the Anderson Lab, the program gives students the opportunity to design and carry out their own research in synthetic biology, from initial idea to public presentation.</p> <p>The program is structured to support students at every level. New members enter through the Foundations of Engineering Biology (FERB) course sequence, which builds the wetlab and computational skills needed to engage in real research. From there, students join self-directed project teams focused on original, student-proposed synthetic biology questions. Teams receive mentorship from faculty, grad students, and experienced student leaders, and meet regularly to plan and execute experiments.</p> <p>What Makes iGEM at Berkeley Unique:</p> <ul> <li>Open to all undergraduates\u2014no experience required  </li> <li>Emphasizes project ownership, collaboration, and mentorship  </li> <li>Supports both experimental and computational biology pathways  </li> <li>Offers one of the largest and most diverse research training pipelines in the college  </li> <li>Concludes with team presentations at the Bay Area Bioengineering Symposium (BABS)  </li> <li>Includes research that has led to publication, such as: Lim et al., \"Interpreting biochemical text with language models\" (2025) bioRxiv</li> </ul>"}]}